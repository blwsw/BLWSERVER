<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hopedove.ucserver.dao.IDictTypeDao">
    <resultMap type="DictTypeVO" id="dictTypeMap">
        <id column="code" property="code"/>
        <result column="name" property="name"/>
        <result column="disabled" property="disabled"/>
        <collection property="dicts" ofType="DictVO">
            <id column="scode" property="code"/><!-- 这里的column对应的是下面查询的别名，而不是表字段名 -->
            <result column="sname" property="name"/><!-- property对应JavaBean中的属性名 -->
            <result column="typeCode" property="typeCode"/><!-- property对应JavaBean中的属性名 -->
            <result column="sortSeq" property="sortSeq"/>
            <result column="sdisabled" property="disabled"/>
        </collection>
    </resultMap>

    <select id="getDictTypeAndDicts" parameterType="Map" resultMap="dictTypeMap">
        select
            t1.code,
            t1.name,
            t1.disabled,
            t2.typeCode,
            t2.code scode,
            t2.name sname,
            t2.sortSeq,
            t2.disabled sdisabled
        from
        dict_type t1
        left join
        dict t2
        on t1.code = t2.typeCode
        where t1.disabled = 0 and t2.disabled = 0
        <if test=" code != null and code != '' ">
            and t1.code like concat('%', #{code}, '%')
        </if>
        <if test=" name != null and name != '' ">
            and t1.name like concat('%', #{name}, '%')
        </if>
    </select>

    <sql id="dictTypesWhere">
        where disabled=0
          <if test=" name != null and name != '' ">
              and name like '%'+#{name}+'%'
          </if>
          <if test=" code != null and code != '' ">
              and code like concat('%', #{code}, '%')
          </if>
    </sql>

    <select id="getDictTypes" parameterType="Map" resultType="DictTypeVO">
        <if test=" pages != null ">
            select
            top ${pages.page_pageSize} *
            from
            (
        </if>
        select top 100 percent row_number() over(order by code) as rows, * from dict_type
        <include refid="dictTypesWhere"></include>
        <if test=" sorts != null and sorts != '' ">
            order by ${sorts}
        </if>
        <if test=" pages != null ">
            ) as t
            where rows > ${pages.page_startIndex}
        </if>
    </select>

    <select id="getDictTypesCount" parameterType="Map" resultType="int">
        select count(*) from dict_type
        <include refid="dictTypesWhere"></include>
    </select>


</mapper>